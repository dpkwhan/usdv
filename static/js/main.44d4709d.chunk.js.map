{"version":3,"sources":["macarons.js","ChartComponent.js","MarketShareByYearExch.js","MarketShareByYearExchWithData.js","presentation.js","index.js"],"names":["color","title","textStyle","fontWeight","dataRange","itemWidth","toolbox","effectiveColor","tooltip","backgroundColor","axisPointer","type","lineStyle","crossStyle","shadowStyle","dataZoom","dataBackgroundColor","fillerColor","handleColor","grid","borderColor","categoryAxis","axisLine","splitLine","valueAxis","splitArea","show","areaStyle","polar","timeline","controlStyle","normal","emphasis","symbol","symbolSize","bar","itemStyle","barBorderRadius","line","smooth","k","color0","scatter","radar","map","label","force","linkStyle","chord","borderWidth","chordStyle","gauge","width","axisTick","splitNumber","length","pointer","fontFamily","ChartComponent","Component","constructor","props","context","super","autoBind","this","createChart","chart","echarts","init","ReactDOM","findDOMNode","options","makeChartOptions","setOption","Error","resizeContainer","node","height","getBoundingClientRect","style","onResize","componentDidMount","registerTheme","macarons","window","onresize","resize","setTimeout","bind","componentWillUnmount","dispose","getSnapshotBeforeUpdate","prevProps","isEqual","data","render","MarketShareByYearExch","method","legendData","xAxisData","series","trigger","animation","formatter","params","rez","axisValue","forEach","item","colorEle","fmt","pct","numeral","format","xx","seriesName","legend","right","feature","magicType","restore","saveAsImage","name","orient","iconStyle","textPosition","textAlign","top","calculable","xAxis","boundaryGap","yAxis","max","axisLabel","value","index","nameLocation","nameGap","start","end","MarketShareByYearExchWithData","exchangeGroups","getExchangeGroups","state","groupName","chartData","filterData","isInGroup","exch","venues","includes","all","cboe","nasdaq","nyse","inverted","iex","trf","onMethodSelection","e","target","setState","onGroupSelection","plotData","marketVolumeByYearExch","marketShareByYearExch","date","processedData","Object","keys","key","exchData","split","hasOwnProperty","v","i","slice","dataPoints","barMaxWidth","stack","push","gutter","span","align","Group","onChange","require","theme","createTheme","primary","secondary","tertiary","quaternary","Presentation","React","transition","transitionDuration","contentWidth","contentHeight","progress","bgColor","textSize","margin","bold","textColor","document","getElementById"],"mappings":"qlnsBACe,GACbA,MAAO,CACL,QACA,OACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAGFC,MAAO,CACLC,UAAW,CACTC,WAAY,SACZH,MAAO,YAIXI,UAAW,CACTC,UAAW,GACXL,MAAO,CAAC,UAAW,YAGrBM,QAAS,CACPN,MAAO,CAAC,UAAW,UAAW,UAAW,WACzCO,eAAgB,WAGlBC,QAAS,CACPC,gBAAiB,qBACjBC,YAAa,CACXC,KAAM,OACNC,UAAW,CACTZ,MAAO,WAETa,WAAY,CACVb,MAAO,WAETc,YAAa,CACXd,MAAO,2BAKbe,SAAU,CACRC,oBAAqB,UACrBC,YAAa,wBACbC,YAAa,WAGfC,KAAM,CACJC,YAAa,QAGfC,aAAc,CACZC,SAAU,CACRV,UAAW,CACTZ,MAAO,YAGXuB,UAAW,CACTX,UAAW,CACTZ,MAAO,CAAC,WAKdwB,UAAW,CACTF,SAAU,CACRV,UAAW,CACTZ,MAAO,YAGXyB,UAAW,CACTC,MAAM,EACNC,UAAW,CACT3B,MAAO,CAAC,wBAAyB,2BAGrCuB,UAAW,CACTX,UAAW,CACTZ,MAAO,CAAC,WAKd4B,MAAO,CACLN,SAAU,CACRV,UAAW,CACTZ,MAAO,SAGXyB,UAAW,CACTC,MAAM,EACNC,UAAW,CACT3B,MAAO,CAAC,wBAAyB,2BAGrCuB,UAAW,CACTX,UAAW,CACTZ,MAAO,UAKb6B,SAAU,CACRjB,UAAW,CACTZ,MAAO,WAET8B,aAAc,CACZC,OAAQ,CAAE/B,MAAO,WACjBgC,SAAU,CAAEhC,MAAO,YAErBiC,OAAQ,cACRC,WAAY,GAGdC,IAAK,CACHC,UAAW,CACTC,gBAAiB,IAIrBC,KAAM,CACJC,QAAQ,EACRN,OAAQ,cACRC,WAAY,GAGdM,EAAG,CACDJ,UAAW,CACTL,OAAQ,CACN/B,MAAO,UACPyC,OAAQ,UACR7B,UAAW,CACTZ,MAAO,UACPyC,OAAQ,cAMhBC,QAAS,CACPT,OAAQ,SACRC,WAAY,GAGdS,MAAO,CACLV,OAAQ,cACRC,WAAY,GAKdU,IAAK,CACHR,UAAW,CACTL,OAAQ,CACNJ,UAAW,CACT3B,MAAO,QAET6C,MAAO,CACL3C,UAAW,CACTF,MAAO,aAIbgC,SAAU,CACRL,UAAW,CACT3B,MAAO,cAMf8C,MAAO,CACLV,UAAW,CACTL,OAAQ,CACNgB,UAAW,CACT/C,MAAO,cAMfgD,MAAO,CACLZ,UAAW,CACTL,OAAQ,CACNkB,YAAa,EACb7B,YAAa,2BACb8B,WAAY,CACVtC,UAAW,CACTZ,MAAO,8BAIbgC,SAAU,CACRiB,YAAa,EACb7B,YAAa,2BACb8B,WAAY,CACVtC,UAAW,CACTZ,MAAO,gCAOjBmD,MAAO,CACL7B,SAAU,CACRV,UAAW,CACTZ,MAAO,CAAC,CAAC,GAAK,WAAY,CAAC,GAAK,WAAY,CAAC,EAAG,YAChDoD,MAAO,KAGXC,SAAU,CACRC,YAAa,GACbC,OAAQ,GACR3C,UAAW,CACTZ,MAAO,SAGXuB,UAAW,CACTgC,OAAQ,GACR3C,UAAW,CACTZ,MAAO,SAGXwD,QAAS,CACPJ,MAAO,IAIXlD,UAAW,CACTuD,WAAY,+BC/OhB,MAAMC,UAAuBC,YAC3BC,YAAYC,EAAOC,GACjBC,MAAMF,EAAOC,GACbE,IAASC,MAGXC,YAAYL,GAEV,GADAI,KAAKE,MAAQC,IAAQC,KAAKC,IAASC,YAAYN,MAAO,aACjDJ,EACH,OAAO,KAET,MAAMW,EAAUP,KAAKQ,iBAAiBZ,GACtCI,KAAKE,MAAMO,UAAUF,GAGvBC,iBAAiBZ,GACf,MAAMc,MAAM,kCAGdC,kBACE,MAAMC,EAAOP,IAASC,YAAYN,MAC1Ba,EAAWD,EAAKE,wBAAhBD,OACRD,EAAKG,MAAMF,OAASA,EACpBb,KAAKJ,MAAMoB,SAASH,GAGtBI,oBACEd,IAAQe,cAAc,WAAYC,GAClCnB,KAAKW,kBACLX,KAAKC,YAAYD,KAAKJ,OACtBwB,OAAOC,SAAW,KAChBrB,KAAKW,kBACLX,KAAKE,MAAMoB,UAEbC,WACE,WACEvB,KAAKW,mBACLa,KAAKxB,MACP,KAIJyB,uBACEzB,KAAKE,MAAMwB,UAGbC,wBAAwBC,GAKtB,OAJKC,IAAQD,EAAUE,KAAM9B,KAAKJ,MAAMkC,QACtC9B,KAAKE,MAAMwB,UACX1B,KAAKC,YAAYD,KAAKJ,QAEjB,KAGTmC,SACE,OAAO,yBAAKhB,MAAO,CAAEF,OAAQ,OAAQ1B,MAAO,WASjCM,QC4CAuC,MAhHf,cAAoCvC,EAClCE,YAAYC,EAAOC,GACjBC,MAAMF,EAAOC,GACbE,IAASC,MAGXQ,iBAAiBZ,GAAQ,MACfqC,EAAiBrC,EAAjBqC,OAAQH,EAASlC,EAATkC,KACRI,EAAkCJ,EAAlCI,WAAYC,EAAsBL,EAAtBK,UAAWC,EAAWN,EAAXM,OAM/B,MAAO,CACL7F,QAAS,CACP8F,QAAS,OACT5F,YAAa,CACX6F,WAAW,GAEbC,UAAW,SAASC,GAClB,IAAIC,EAAG,8CAA0CD,EAAO,GAAGE,UAApD,YAUP,OATAD,GAAO,UACPD,EAAOG,QAAQC,IACb,MAAMC,GAbI9G,EAaiB6G,EAAK7G,MAbjB,uBADrB,gFACqB,6BACqBA,EADrB,cAALA,MAcV,MAAM+G,EAAiB,cAAXb,EAAyB,OAAS,OACxCc,EAAMC,IAAQJ,EAAKd,MAAMmB,OAAOH,GAChCI,EAAE,0CAAsCL,EAAtC,YAAkDD,EAAKO,WAAvD,8DAAuHJ,EAAvH,cACRN,GAAOS,IAETT,GAAO,WACAA,IAGXW,OAAQ,CACNtB,KAAMI,GAER7F,QAAS,CACPoB,MAAM,EACN4F,MAAO,KACPC,QAAS,CACPC,UAAW,CACT9F,MAAM,EACNf,KAAM,CAAC,OAAQ,OACfV,MAAO,CACLqC,KAAM,aACNH,IAAK,cAGTsF,QAAS,CAAE/F,MAAM,EAAMzB,MAAO,WAC9ByH,YAAa,CACXhG,MAAM,EACNzB,MAAO,gBACPU,KAAM,MACNgH,KACa,cAAXzB,EACI,2BACA,6BAGV0B,OAAQ,WACRC,UAAW,CACT9F,OAAQ,CACN+F,aAAc,OACdC,UAAW,SAEb/F,SAAU,CACR8F,aAAc,OACdC,UAAW,UAGfC,IAAK,UAEPC,YAAY,EACZC,MAAO,CACLvH,KAAM,WACNwH,aAAa,EACbpC,KAAMK,GAERgC,MAAO,CACLzH,KAAM,QACN0H,IAAK,UACLC,UAAW,CACT9B,UAAW,SAAS+B,EAAOC,GACzB,MAAkB,cAAXtC,EACHe,IAAQsB,GAAOrB,OAAO,MACtBD,IAAQsB,GAAOrB,OAAO,OAG9BS,KAAiB,cAAXzB,EAAyB,gBAAkB,mBACjDuC,aAAc,MACdC,QAAS,IAEX3H,SAAU,CACR,CACEJ,KAAM,SACNgI,MAAO,GACPC,IAAK,KAEP,CACElH,MAAM,EACNf,KAAM,SACNqH,IAAK,MACLW,MAAO,GACPC,IAAK,MAGTvC,Y,kBCxGN,MAAMwC,UAAsClF,YAC1CC,YAAYC,EAAOC,GACjBC,MAAMF,EAAOC,GACbE,IAASC,MACTA,KAAK6E,eAAiB7E,KAAK8E,oBAC3B9E,KAAK+E,MAAQ,CACX9C,OAAQ,YACR+C,UAAW,MACXC,UAAWjF,KAAKkF,WAAW,OAC3BrE,OAAQ,KAIZsE,UAAUC,EAAMJ,GACd,GAAkB,QAAdA,EAAqB,OAAO,EAEhC,OADqBhF,KAAK6E,eAAeG,GAAWK,OAChCC,SAASF,GAG/BN,oBACE,MAAO,CACLS,IAAK,GACLC,KAAM,CACJH,OAAQ,CAAC,OAAQ,WAAY,WAAY,YAAa,cAExDI,OAAQ,CACNJ,OAAQ,CAAC,SAAU,YAAa,aAAc,eAEhDK,KAAM,CACJL,OAAQ,CACN,OACA,gBACA,YACA,eACA,kBAGJM,SAAU,CACRN,OAAQ,CAAC,WAAY,YAAa,YAAa,kBAEjDO,IAAK,CAAEP,OAAQ,CAAC,QAChBQ,IAAK,CAAER,OAAQ,CAAC,SAIpBS,kBAAkBC,GAChB,MAAM9D,EAAS8D,EAAEC,OAAO1B,MACxBtE,KAAKiG,SAAS,CACZhE,SACAgD,UAAWjF,KAAKkF,WAAWlF,KAAK+E,MAAMC,UAAW/C,KAIrDiE,iBAAiBH,GACf,MAAMf,EAAYe,EAAEC,OAAO1B,MAC3BtE,KAAKiG,SAAS,CACZjB,YACAC,UAAWjF,KAAKkF,WAAWF,EAAWhF,KAAK+E,MAAM9C,UAIrDiD,WAAWF,EAAW/C,GACpB,IAAIkE,EAAWC,EACA,aAAXnE,IACFkE,EAAWE,GAGb,MAAMpB,EAAY,CAChB9C,UAAWgE,EAASG,KACpBpE,WAAY,GACZE,OAAQ,IAGV,IAAImE,EAAgB,GA2CpB,MA1CkB,QAAdvB,EACFwB,OAAOC,KAAKN,GAAUxD,QAAQ+D,IAC5B,GAAY,SAARA,EAAgB,OACpB,MAAMC,EAAWR,EAASO,GACpBhD,EAAOgD,EAAIE,MAAM,KAAK,GACxBL,EAAcM,eAAenD,GAC/BiD,EAAShE,SAAQ,SAASmE,EAAGC,GAC3BR,EAAc7C,GAAMqD,IAAMD,KAI5BP,EAAc7C,GAAQiD,EAASK,MAAM,KAIzCT,EAAgBJ,EAGlBK,OAAOC,KAAKF,GAAe5D,QAAQ+D,IACjC,GAAY,SAARA,EAAgB,OACpB,MAAMhD,EAAOgD,EACb,GAAI1G,KAAKmF,UAAUzB,EAAMsB,GAAY,CACnC,MAAMiC,EAAa,CACjBvD,OACAhH,KAAM,MACNwK,YAAa,GACbC,MAAO,cACPnJ,OAAQ,OACRG,UAAW,CAAEL,OAAQ,CAAEJ,UAAW,CAAEhB,KAAM,aAC1CoF,KAAMyE,EAAc7C,IAEJ,aAAdsB,GAAqC,kBAATtB,GAC9ByC,EAASG,KAAK3D,SAAQ,SAAS2D,EAAMS,GAC/BT,GAAQ,OACVW,EAAWnF,KAAKiF,GAAK,MAI3B9B,EAAU/C,WAAWkF,KAAK1D,GAC1BuB,EAAU7C,OAAOgF,KAAKH,MAGnBhC,EAGTjE,SAASH,GACPb,KAAKiG,SAAS,CAAEpF,WAGlBkB,SAAU,MAAD,EACkC/B,KAAK+E,MAAtC9C,EADD,EACCA,OAAQ+C,EADT,EACSA,UAAWC,EADpB,EACoBA,UAE3B,OACE,kBAAC,WAAD,KACE,uBAAKoC,OAAQ,IACX,uBAAKC,KAAM,IACT,yBAAKC,MAAM,SACT,sBAAOC,MAAP,CAAaC,SAAUzH,KAAK8F,kBAAmBxB,MAAOrC,GACpD,uBAAOqC,MAAM,aAAb,iBACA,uBAAOA,MAAM,YAAb,oBAKR,uBAAK+C,OAAQ,IACX,uBAAKC,KAAM,IACT,yBAAKC,MAAM,SACT,sBAAOC,MAAP,CAAaC,SAAUzH,KAAKkG,iBAAkB5B,MAAOU,GACnD,uBAAOV,MAAM,OAAb,OACA,uBAAOA,MAAM,QAAb,QACA,uBAAOA,MAAM,UAAb,UACA,uBAAOA,MAAM,QAAb,QACA,uBAAOA,MAAM,YAAb,YACA,uBAAOA,MAAM,OAAb,OACA,uBAAOA,MAAM,OAAb,oBAMR,uBAAK+C,OAAQ,IACX,uBAAKC,KAAM,IACT,kBAAC,EAAD,CACExF,KAAMmD,EACNjE,SAAUhB,KAAKgB,SACfiB,OAAQA,QASP2C,Q,kBCpKf8C,EAAQ,KAER,MAAMC,EAAQC,IACZ,CACEC,QAAS,QACTC,UAAW,QACXC,SAAU,OACVC,WAAY,SAEd,CACEH,QAAS,aACTC,UAAW,cAIA,MAAMG,UAAqBC,IAAMxI,UAC9CqC,SACE,OACE,kBAAC,IAAD,CACEoG,WAAY,CAAC,QACbR,MAAOA,EACPS,mBAAoB,IACpBC,aAAc,MACdC,cAAe,OACfC,SAAU,QAEV,kBAAC,IAAD,CAAOJ,WAAY,CAAC,QAASK,QAAQ,WACnC,kBAAC,IAAD,CACEC,SAAS,QACTC,OAAO,mBACPC,MAAI,EACJC,UAAU,SAJZ,8BAQA,kBAAC,EAAD,S,OCxCVvI,IAAS0B,OAAO,kBAAC,EAAD,MAAkB8G,SAASC,eAAe,W","file":"static/js/main.44d4709d.chunk.js","sourcesContent":["// https://echarts.baidu.com/echarts2/doc/example/theme/macarons.js\nexport default {\n  color: [\n    \"green\",\n    \"blue\",\n    \"#5ab1ef\",\n    \"#ffb980\",\n    \"#d87a80\",\n    \"#8d98b3\",\n    \"#e5cf0d\",\n    \"#97b552\",\n    \"#95706d\",\n    \"#dc69aa\",\n    \"#07a2a4\",\n    \"#9a7fd1\",\n    \"#588dd5\",\n    \"#f5994e\",\n    \"#c05050\",\n    \"#59678c\",\n    \"#c9ab00\",\n    \"#7eb00a\",\n    \"#6f5553\",\n    \"#c14089\"\n  ],\n\n  title: {\n    textStyle: {\n      fontWeight: \"normal\",\n      color: \"#008acd\"\n    }\n  },\n\n  dataRange: {\n    itemWidth: 15,\n    color: [\"#5ab1ef\", \"#e0ffff\"]\n  },\n\n  toolbox: {\n    color: [\"#1e90ff\", \"#1e90ff\", \"#1e90ff\", \"#1e90ff\"],\n    effectiveColor: \"#ff4500\"\n  },\n\n  tooltip: {\n    backgroundColor: \"rgba(50,50,50,0.5)\",\n    axisPointer: {\n      type: \"line\",\n      lineStyle: {\n        color: \"#008acd\"\n      },\n      crossStyle: {\n        color: \"#008acd\"\n      },\n      shadowStyle: {\n        color: \"rgba(200,200,200,0.2)\"\n      }\n    }\n  },\n\n  dataZoom: {\n    dataBackgroundColor: \"#efefff\",\n    fillerColor: \"rgba(182,162,222,0.2)\",\n    handleColor: \"#008acd\"\n  },\n\n  grid: {\n    borderColor: \"#eee\"\n  },\n\n  categoryAxis: {\n    axisLine: {\n      lineStyle: {\n        color: \"#008acd\"\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: [\"#eee\"]\n      }\n    }\n  },\n\n  valueAxis: {\n    axisLine: {\n      lineStyle: {\n        color: \"#008acd\"\n      }\n    },\n    splitArea: {\n      show: true,\n      areaStyle: {\n        color: [\"rgba(250,250,250,0.1)\", \"rgba(200,200,200,0.1)\"]\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: [\"#eee\"]\n      }\n    }\n  },\n\n  polar: {\n    axisLine: {\n      lineStyle: {\n        color: \"#ddd\"\n      }\n    },\n    splitArea: {\n      show: true,\n      areaStyle: {\n        color: [\"rgba(250,250,250,0.2)\", \"rgba(200,200,200,0.2)\"]\n      }\n    },\n    splitLine: {\n      lineStyle: {\n        color: \"#ddd\"\n      }\n    }\n  },\n\n  timeline: {\n    lineStyle: {\n      color: \"#008acd\"\n    },\n    controlStyle: {\n      normal: { color: \"#008acd\" },\n      emphasis: { color: \"#008acd\" }\n    },\n    symbol: \"emptyCircle\",\n    symbolSize: 3\n  },\n\n  bar: {\n    itemStyle: {\n      barBorderRadius: 5\n    }\n  },\n\n  line: {\n    smooth: false,\n    symbol: \"emptyCircle\",\n    symbolSize: 5\n  },\n\n  k: {\n    itemStyle: {\n      normal: {\n        color: \"#d87a80\",\n        color0: \"#2ec7c9\",\n        lineStyle: {\n          color: \"#d87a80\",\n          color0: \"#2ec7c9\"\n        }\n      }\n    }\n  },\n\n  scatter: {\n    symbol: \"circle\",\n    symbolSize: 4\n  },\n\n  radar: {\n    symbol: \"emptyCircle\",\n    symbolSize: 3\n    //symbol: null,\n    //symbolRotate : null,\n  },\n\n  map: {\n    itemStyle: {\n      normal: {\n        areaStyle: {\n          color: \"#ddd\"\n        },\n        label: {\n          textStyle: {\n            color: \"#d87a80\"\n          }\n        }\n      },\n      emphasis: {\n        areaStyle: {\n          color: \"#fe994e\"\n        }\n      }\n    }\n  },\n\n  force: {\n    itemStyle: {\n      normal: {\n        linkStyle: {\n          color: \"#1e90ff\"\n        }\n      }\n    }\n  },\n\n  chord: {\n    itemStyle: {\n      normal: {\n        borderWidth: 1,\n        borderColor: \"rgba(128, 128, 128, 0.5)\",\n        chordStyle: {\n          lineStyle: {\n            color: \"rgba(128, 128, 128, 0.5)\"\n          }\n        }\n      },\n      emphasis: {\n        borderWidth: 1,\n        borderColor: \"rgba(128, 128, 128, 0.5)\",\n        chordStyle: {\n          lineStyle: {\n            color: \"rgba(128, 128, 128, 0.5)\"\n          }\n        }\n      }\n    }\n  },\n\n  gauge: {\n    axisLine: {\n      lineStyle: {\n        color: [[0.2, \"#2ec7c9\"], [0.8, \"#5ab1ef\"], [1, \"#d87a80\"]],\n        width: 10\n      }\n    },\n    axisTick: {\n      splitNumber: 10,\n      length: 15,\n      lineStyle: {\n        color: \"auto\"\n      }\n    },\n    splitLine: {\n      length: 22,\n      lineStyle: {\n        color: \"auto\"\n      }\n    },\n    pointer: {\n      width: 5\n    }\n  },\n\n  textStyle: {\n    fontFamily: \"Arial, Verdana, sans-serif\"\n  }\n};\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport autoBind from \"react-autobind\";\nimport PropTypes from \"prop-types\";\nimport echarts from \"echarts\";\nimport isEqual from \"lodash/isEqual\";\nimport macarons from \"./macarons\";\n\nclass ChartComponent extends Component {\n  constructor(props, context) {\n    super(props, context);\n    autoBind(this);\n  }\n\n  createChart(props) {\n    this.chart = echarts.init(ReactDOM.findDOMNode(this), \"macarons\");\n    if (!props) {\n      return null;\n    }\n    const options = this.makeChartOptions(props);\n    this.chart.setOption(options);\n  }\n\n  makeChartOptions(props) {\n    throw Error(\"Please implement this function\");\n  }\n\n  resizeContainer() {\n    const node = ReactDOM.findDOMNode(this);\n    const { height } = node.getBoundingClientRect();\n    node.style.height = height;\n    this.props.onResize(height);\n  }\n\n  componentDidMount() {\n    echarts.registerTheme(\"macarons\", macarons);\n    this.resizeContainer();\n    this.createChart(this.props);\n    window.onresize = () => {\n      this.resizeContainer();\n      this.chart.resize();\n    };\n    setTimeout(\n      function() {\n        this.resizeContainer();\n      }.bind(this),\n      500\n    );\n  }\n\n  componentWillUnmount() {\n    this.chart.dispose();\n  }\n\n  getSnapshotBeforeUpdate(prevProps) {\n    if (!isEqual(prevProps.data, this.props.data)) {\n      this.chart.dispose();\n      this.createChart(this.props);\n    }\n    return null;\n  }\n\n  render() {\n    return <div style={{ height: \"70vh\", width: \"100%\" }} />;\n  }\n}\n\nChartComponent.propTypes = {\n  data: PropTypes.object,\n  onResize: PropTypes.func\n};\n\nexport default ChartComponent;\n","import autoBind from \"react-autobind\";\nimport numeral from \"numeral\";\nimport ChartComponent from \"./ChartComponent\";\n\nclass MarketShareByYearExch extends ChartComponent {\n  constructor(props, context) {\n    super(props, context);\n    autoBind(this);\n  }\n\n  makeChartOptions(props) {\n    const { method, data } = props;\n    const { legendData, xAxisData, series } = data;\n    const style =\n      \"display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px\";\n    const colorSpan = color =>\n      `<span style=\"${style};background-color:${color}\"></span>`;\n\n    return {\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          animation: true\n        },\n        formatter: function(params) {\n          let rez = `<p style=\"text-align:left\"><b>Date: ${params[0].axisValue}</b></p>`;\n          rez += \"<table>\";\n          params.forEach(item => {\n            const colorEle = colorSpan(item.color);\n            const fmt = method === \"mktVolume\" ? \"0.0a\" : \"0.0%\";\n            const pct = numeral(item.data).format(fmt);\n            const xx = `<tr><td style=\"text-align:left\">${colorEle} ${item.seriesName}</td><td style=\"text-align:right;padding-left:5px\">${pct}</td></tr>`;\n            rez += xx;\n          });\n          rez += \"</table>\";\n          return rez;\n        }\n      },\n      legend: {\n        data: legendData\n      },\n      toolbox: {\n        show: true,\n        right: \"1%\",\n        feature: {\n          magicType: {\n            show: true,\n            type: [\"line\", \"bar\"],\n            title: {\n              line: \"Line Chart\",\n              bar: \"Bar Chart\"\n            }\n          },\n          restore: { show: true, title: \"Restore\" },\n          saveAsImage: {\n            show: true,\n            title: \"Save As Image\",\n            type: \"png\",\n            name:\n              method === \"mktVolume\"\n                ? \"daily-volume-by-exchange\"\n                : \"market-share-by-exchange\"\n          }\n        },\n        orient: \"vertical\",\n        iconStyle: {\n          normal: {\n            textPosition: \"left\",\n            textAlign: \"right\"\n          },\n          emphasis: {\n            textPosition: \"left\",\n            textAlign: \"right\"\n          }\n        },\n        top: \"middle\"\n      },\n      calculable: true,\n      xAxis: {\n        type: \"category\",\n        boundaryGap: true,\n        data: xAxisData\n      },\n      yAxis: {\n        type: \"value\",\n        max: \"dataMax\",\n        axisLabel: {\n          formatter: function(value, index) {\n            return method === \"mktVolume\"\n              ? numeral(value).format(\"0a\")\n              : numeral(value).format(\"%\");\n          }\n        },\n        name: method === \"mktVolume\" ? \"Market Volume\" : \"Market Share (%)\",\n        nameLocation: \"end\",\n        nameGap: 22\n      },\n      dataZoom: [\n        {\n          type: \"inside\",\n          start: 97,\n          end: 100\n        },\n        {\n          show: true,\n          type: \"slider\",\n          top: \"95%\",\n          start: 97,\n          end: 100\n        }\n      ],\n      series\n    };\n  }\n}\n\nexport default MarketShareByYearExch;\n","import React, { Component, Fragment } from \"react\";\nimport autoBind from \"react-autobind\";\nimport { Row, Col, Radio } from \"antd\";\nimport MarketShareByYearExch from \"./MarketShareByYearExch\";\nimport marketVolumeByYearExch from \"./marketVolumeByExch.json\";\nimport marketShareByYearExch from \"./marketShareByExch.json\";\n\nclass MarketShareByYearExchWithData extends Component {\n  constructor(props, context) {\n    super(props, context);\n    autoBind(this);\n    this.exchangeGroups = this.getExchangeGroups();\n    this.state = {\n      method: \"mktVolume\",\n      groupName: \"all\",\n      chartData: this.filterData(\"all\"),\n      height: 300\n    };\n  }\n\n  isInGroup(exch, groupName) {\n    if (groupName === \"all\") return true;\n    const groupMembers = this.exchangeGroups[groupName].venues;\n    return groupMembers.includes(exch);\n  }\n\n  getExchangeGroups() {\n    return {\n      all: {},\n      cboe: {\n        venues: [\"CBOE\", \"CBOE BYX\", \"CBOE BZX\", \"CBOE EDGA\", \"CBOE EDGX\"]\n      },\n      nasdaq: {\n        venues: [\"NASDAQ\", \"NASDAQ BX\", \"NASDAQ ISE\", \"NASDAQ PSX\"]\n      },\n      nyse: {\n        venues: [\n          \"NYSE\",\n          \"NYSE American\",\n          \"NYSE Arca\",\n          \"NYSE Chicago\",\n          \"NYSE National\"\n        ]\n      },\n      inverted: {\n        venues: [\"CBOE BYX\", \"CBOE EDGA\", \"NASDAQ BX\", \"NYSE National\"]\n      },\n      iex: { venues: [\"IEX\"] },\n      trf: { venues: [\"TRF\"] }\n    };\n  }\n\n  onMethodSelection(e) {\n    const method = e.target.value;\n    this.setState({\n      method,\n      chartData: this.filterData(this.state.groupName, method)\n    });\n  }\n\n  onGroupSelection(e) {\n    const groupName = e.target.value;\n    this.setState({\n      groupName,\n      chartData: this.filterData(groupName, this.state.method)\n    });\n  }\n\n  filterData(groupName, method) {\n    let plotData = marketVolumeByYearExch;\n    if (method === \"mktShare\") {\n      plotData = marketShareByYearExch;\n    }\n\n    const chartData = {\n      xAxisData: plotData.date,\n      legendData: [],\n      series: []\n    };\n\n    let processedData = {};\n    if (groupName === \"all\") {\n      Object.keys(plotData).forEach(key => {\n        if (key === \"date\") return;\n        const exchData = plotData[key];\n        const name = key.split(\" \")[0];\n        if (processedData.hasOwnProperty(name)) {\n          exchData.forEach(function(v, i) {\n            processedData[name][i] += v;\n          });\n        } else {\n          // Make sure to clone the array\n          processedData[name] = exchData.slice(0);\n        }\n      });\n    } else {\n      processedData = plotData;\n    }\n\n    Object.keys(processedData).forEach(key => {\n      if (key === \"date\") return;\n      const name = key;\n      if (this.isInGroup(name, groupName)) {\n        const dataPoints = {\n          name,\n          type: \"bar\",\n          barMaxWidth: 50,\n          stack: \"dailyVolume\",\n          symbol: \"none\",\n          itemStyle: { normal: { areaStyle: { type: \"default\" } } },\n          data: processedData[name]\n        };\n        if (groupName === \"inverted\" && name === \"NYSE National\") {\n          plotData.date.forEach(function(date, i) {\n            if (date <= 2017) {\n              dataPoints.data[i] = 0;\n            }\n          });\n        }\n        chartData.legendData.push(name);\n        chartData.series.push(dataPoints);\n      }\n    });\n    return chartData;\n  }\n\n  onResize(height) {\n    this.setState({ height });\n  }\n\n  render() {\n    const { method, groupName, chartData } = this.state;\n\n    return (\n      <Fragment>\n        <Row gutter={32}>\n          <Col span={24}>\n            <div align=\"right\">\n              <Radio.Group onChange={this.onMethodSelection} value={method}>\n                <Radio value=\"mktVolume\">Market Volume</Radio>\n                <Radio value=\"mktShare\">Market Share</Radio>\n              </Radio.Group>\n            </div>\n          </Col>\n        </Row>\n        <Row gutter={32}>\n          <Col span={24}>\n            <div align=\"right\">\n              <Radio.Group onChange={this.onGroupSelection} value={groupName}>\n                <Radio value=\"all\">All</Radio>\n                <Radio value=\"cboe\">CBOE</Radio>\n                <Radio value=\"nasdaq\">NASDAQ</Radio>\n                <Radio value=\"nyse\">NYSE</Radio>\n                <Radio value=\"inverted\">Inverted</Radio>\n                <Radio value=\"iex\">IEX</Radio>\n                <Radio value=\"trf\">Off-Exchange</Radio>\n              </Radio.Group>\n            </div>\n          </Col>\n        </Row>\n\n        <Row gutter={32}>\n          <Col span={24}>\n            <MarketShareByYearExch\n              data={chartData}\n              onResize={this.onResize}\n              method={method}\n            />\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\n\nexport default MarketShareByYearExchWithData;\n","// Import React\nimport React from \"react\";\n\n// Import Spectacle Core tags\nimport { Deck, Slide, Text } from \"spectacle\";\nimport MarketShareByYearExchWithData from \"./MarketShareByYearExchWithData\";\n\n// Import theme\nimport createTheme from \"spectacle/lib/themes/default\";\n\n// Require CSS\nrequire(\"normalize.css\");\n\nconst theme = createTheme(\n  {\n    primary: \"white\",\n    secondary: \"black\",\n    tertiary: \"blue\",\n    quaternary: \"black\"\n  },\n  {\n    primary: \"Montserrat\",\n    secondary: \"Helvetica\"\n  }\n);\n\nexport default class Presentation extends React.Component {\n  render() {\n    return (\n      <Deck\n        transition={[\"fade\"]}\n        theme={theme}\n        transitionDuration={500}\n        contentWidth={\"95%\"}\n        contentHeight={\"100%\"}\n        progress={\"none\"}\n      >\n        <Slide transition={[\"fade\"]} bgColor=\"primary\">\n          <Text\n            textSize=\"1.5em\"\n            margin=\"0px 0px 30px 0px\"\n            bold\n            textColor=\"black\"\n          >\n            U.S. Equities Daily Volume\n          </Text>\n          <MarketShareByYearExchWithData />\n        </Slide>\n      </Deck>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Presentation from \"./presentation\";\n\nimport \"./index.css\";\n\nReactDOM.render(<Presentation />, document.getElementById(\"root\"));\n"],"sourceRoot":""}