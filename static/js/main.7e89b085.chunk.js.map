{"version":3,"sources":["macarons.js","ChartComponent.js","MarketShareByYearExch.js","MarketShareByYearExchWithData.js","presentation.js","index.js"],"names":["color","title","textStyle","fontWeight","dataRange","itemWidth","toolbox","effectiveColor","tooltip","backgroundColor","axisPointer","type","lineStyle","crossStyle","shadowStyle","dataZoom","dataBackgroundColor","fillerColor","handleColor","grid","borderColor","categoryAxis","axisLine","splitLine","valueAxis","splitArea","show","areaStyle","polar","timeline","controlStyle","normal","emphasis","symbol","symbolSize","bar","itemStyle","barBorderRadius","line","smooth","k","color0","scatter","radar","map","label","force","linkStyle","chord","borderWidth","chordStyle","gauge","width","axisTick","splitNumber","length","pointer","fontFamily","ChartComponent","Component","constructor","props","context","super","autoBind","this","createChart","chart","echarts","init","ReactDOM","findDOMNode","options","makeChartOptions","setOption","Error","resizeContainer","node","height","getBoundingClientRect","style","onResize","componentDidMount","registerTheme","macarons","window","onresize","resize","setTimeout","bind","componentWillUnmount","dispose","getSnapshotBeforeUpdate","prevProps","isEqual","data","render","MarketShareByYearExch","method","legendData","xAxisData","series","trigger","animation","formatter","params","rez","axisValue","forEach","item","colorEle","fmt","pct","numeral","format","xx","seriesName","legend","right","feature","magicType","restore","saveAsImage","name","orient","iconStyle","textPosition","textAlign","top","calculable","xAxis","boundaryGap","yAxis","max","axisLabel","value","index","nameLocation","nameGap","start","end","MarketShareByYearExchWithData","exchangeGroups","getExchangeGroups","state","groupName","chartData","filterData","isInGroup","exch","venues","includes","all","cboe","nasdaq","nyse","inverted","iex","trf","onMethodSelection","e","target","setState","onGroupSelection","plotData","marketVolumeByYearExch","marketShareByYearExch","date","processedData","Object","keys","key","exchData","split","hasOwnProperty","v","i","slice","dataPoints","barMaxWidth","stack","push","gutter","span","align","Group","onChange","require","theme","createTheme","primary","secondary","tertiary","quaternary","Presentation","React","transition","transitionDuration","contentWidth","contentHeight","progress","bgColor","textSize","margin","bold","textColor","document","getElementById"],"mappings":"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","file":"static/js/main.7e89b085.chunk.js","sourcesContent":["// https://echarts.baidu.com/echarts2/doc/example/theme/macarons.js\r\nexport default {\r\n  color: [\r\n    \"green\",\r\n    \"blue\",\r\n    \"#5ab1ef\",\r\n    \"#ffb980\",\r\n    \"#d87a80\",\r\n    \"#8d98b3\",\r\n    \"#e5cf0d\",\r\n    \"#97b552\",\r\n    \"#95706d\",\r\n    \"#dc69aa\",\r\n    \"#07a2a4\",\r\n    \"#9a7fd1\",\r\n    \"#588dd5\",\r\n    \"#f5994e\",\r\n    \"#c05050\",\r\n    \"#59678c\",\r\n    \"#c9ab00\",\r\n    \"#7eb00a\",\r\n    \"#6f5553\",\r\n    \"#c14089\"\r\n  ],\r\n\r\n  title: {\r\n    textStyle: {\r\n      fontWeight: \"normal\",\r\n      color: \"#008acd\"\r\n    }\r\n  },\r\n\r\n  dataRange: {\r\n    itemWidth: 15,\r\n    color: [\"#5ab1ef\", \"#e0ffff\"]\r\n  },\r\n\r\n  toolbox: {\r\n    color: [\"#1e90ff\", \"#1e90ff\", \"#1e90ff\", \"#1e90ff\"],\r\n    effectiveColor: \"#ff4500\"\r\n  },\r\n\r\n  tooltip: {\r\n    backgroundColor: \"rgba(50,50,50,0.5)\",\r\n    axisPointer: {\r\n      type: \"line\",\r\n      lineStyle: {\r\n        color: \"#008acd\"\r\n      },\r\n      crossStyle: {\r\n        color: \"#008acd\"\r\n      },\r\n      shadowStyle: {\r\n        color: \"rgba(200,200,200,0.2)\"\r\n      }\r\n    }\r\n  },\r\n\r\n  dataZoom: {\r\n    dataBackgroundColor: \"#efefff\",\r\n    fillerColor: \"rgba(182,162,222,0.2)\",\r\n    handleColor: \"#008acd\"\r\n  },\r\n\r\n  grid: {\r\n    borderColor: \"#eee\"\r\n  },\r\n\r\n  categoryAxis: {\r\n    axisLine: {\r\n      lineStyle: {\r\n        color: \"#008acd\"\r\n      }\r\n    },\r\n    splitLine: {\r\n      lineStyle: {\r\n        color: [\"#eee\"]\r\n      }\r\n    }\r\n  },\r\n\r\n  valueAxis: {\r\n    axisLine: {\r\n      lineStyle: {\r\n        color: \"#008acd\"\r\n      }\r\n    },\r\n    splitArea: {\r\n      show: true,\r\n      areaStyle: {\r\n        color: [\"rgba(250,250,250,0.1)\", \"rgba(200,200,200,0.1)\"]\r\n      }\r\n    },\r\n    splitLine: {\r\n      lineStyle: {\r\n        color: [\"#eee\"]\r\n      }\r\n    }\r\n  },\r\n\r\n  polar: {\r\n    axisLine: {\r\n      lineStyle: {\r\n        color: \"#ddd\"\r\n      }\r\n    },\r\n    splitArea: {\r\n      show: true,\r\n      areaStyle: {\r\n        color: [\"rgba(250,250,250,0.2)\", \"rgba(200,200,200,0.2)\"]\r\n      }\r\n    },\r\n    splitLine: {\r\n      lineStyle: {\r\n        color: \"#ddd\"\r\n      }\r\n    }\r\n  },\r\n\r\n  timeline: {\r\n    lineStyle: {\r\n      color: \"#008acd\"\r\n    },\r\n    controlStyle: {\r\n      normal: { color: \"#008acd\" },\r\n      emphasis: { color: \"#008acd\" }\r\n    },\r\n    symbol: \"emptyCircle\",\r\n    symbolSize: 3\r\n  },\r\n\r\n  bar: {\r\n    itemStyle: {\r\n      barBorderRadius: 5\r\n    }\r\n  },\r\n\r\n  line: {\r\n    smooth: false,\r\n    symbol: \"emptyCircle\",\r\n    symbolSize: 5\r\n  },\r\n\r\n  k: {\r\n    itemStyle: {\r\n      normal: {\r\n        color: \"#d87a80\",\r\n        color0: \"#2ec7c9\",\r\n        lineStyle: {\r\n          color: \"#d87a80\",\r\n          color0: \"#2ec7c9\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  scatter: {\r\n    symbol: \"circle\",\r\n    symbolSize: 4\r\n  },\r\n\r\n  radar: {\r\n    symbol: \"emptyCircle\",\r\n    symbolSize: 3\r\n    //symbol: null,\r\n    //symbolRotate : null,\r\n  },\r\n\r\n  map: {\r\n    itemStyle: {\r\n      normal: {\r\n        areaStyle: {\r\n          color: \"#ddd\"\r\n        },\r\n        label: {\r\n          textStyle: {\r\n            color: \"#d87a80\"\r\n          }\r\n        }\r\n      },\r\n      emphasis: {\r\n        areaStyle: {\r\n          color: \"#fe994e\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  force: {\r\n    itemStyle: {\r\n      normal: {\r\n        linkStyle: {\r\n          color: \"#1e90ff\"\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  chord: {\r\n    itemStyle: {\r\n      normal: {\r\n        borderWidth: 1,\r\n        borderColor: \"rgba(128, 128, 128, 0.5)\",\r\n        chordStyle: {\r\n          lineStyle: {\r\n            color: \"rgba(128, 128, 128, 0.5)\"\r\n          }\r\n        }\r\n      },\r\n      emphasis: {\r\n        borderWidth: 1,\r\n        borderColor: \"rgba(128, 128, 128, 0.5)\",\r\n        chordStyle: {\r\n          lineStyle: {\r\n            color: \"rgba(128, 128, 128, 0.5)\"\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  gauge: {\r\n    axisLine: {\r\n      lineStyle: {\r\n        color: [[0.2, \"#2ec7c9\"], [0.8, \"#5ab1ef\"], [1, \"#d87a80\"]],\r\n        width: 10\r\n      }\r\n    },\r\n    axisTick: {\r\n      splitNumber: 10,\r\n      length: 15,\r\n      lineStyle: {\r\n        color: \"auto\"\r\n      }\r\n    },\r\n    splitLine: {\r\n      length: 22,\r\n      lineStyle: {\r\n        color: \"auto\"\r\n      }\r\n    },\r\n    pointer: {\r\n      width: 5\r\n    }\r\n  },\r\n\r\n  textStyle: {\r\n    fontFamily: \"Arial, Verdana, sans-serif\"\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport autoBind from \"react-autobind\";\r\nimport PropTypes from \"prop-types\";\r\nimport echarts from \"echarts\";\r\nimport isEqual from \"lodash/isEqual\";\r\nimport macarons from \"./macarons\";\r\n\r\nclass ChartComponent extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    autoBind(this);\r\n  }\r\n\r\n  createChart(props) {\r\n    this.chart = echarts.init(ReactDOM.findDOMNode(this), \"macarons\");\r\n    if (!props) {\r\n      return null;\r\n    }\r\n    const options = this.makeChartOptions(props);\r\n    this.chart.setOption(options);\r\n  }\r\n\r\n  makeChartOptions(props) {\r\n    throw Error(\"Please implement this function\");\r\n  }\r\n\r\n  resizeContainer() {\r\n    const node = ReactDOM.findDOMNode(this);\r\n    const { height } = node.getBoundingClientRect();\r\n    node.style.height = height;\r\n    this.props.onResize(height);\r\n  }\r\n\r\n  componentDidMount() {\r\n    echarts.registerTheme(\"macarons\", macarons);\r\n    this.resizeContainer();\r\n    this.createChart(this.props);\r\n    window.onresize = () => {\r\n      this.resizeContainer();\r\n      this.chart.resize();\r\n    };\r\n    setTimeout(\r\n      function() {\r\n        this.resizeContainer();\r\n      }.bind(this),\r\n      500\r\n    );\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.chart.dispose();\r\n  }\r\n\r\n  getSnapshotBeforeUpdate(prevProps) {\r\n    if (!isEqual(prevProps.data, this.props.data)) {\r\n      this.chart.dispose();\r\n      this.createChart(this.props);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  render() {\r\n    return <div style={{ height: \"70vh\", width: \"100%\" }} />;\r\n  }\r\n}\r\n\r\nChartComponent.propTypes = {\r\n  data: PropTypes.object,\r\n  onResize: PropTypes.func\r\n};\r\n\r\nexport default ChartComponent;\r\n","import autoBind from \"react-autobind\";\r\nimport numeral from \"numeral\";\r\nimport ChartComponent from \"./ChartComponent\";\r\n\r\nclass MarketShareByYearExch extends ChartComponent {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    autoBind(this);\r\n  }\r\n\r\n  makeChartOptions(props) {\r\n    const { method, data } = props;\r\n    const { legendData, xAxisData, series } = data;\r\n    const style =\r\n      \"display:inline-block;margin-right:5px;border-radius:10px;width:9px;height:9px\";\r\n    const colorSpan = color =>\r\n      `<span style=\"${style};background-color:${color}\"></span>`;\r\n\r\n    return {\r\n      tooltip: {\r\n        trigger: \"axis\",\r\n        axisPointer: {\r\n          animation: true\r\n        },\r\n        formatter: function(params) {\r\n          let rez = `<p style=\"text-align:left\"><b>Date: ${params[0].axisValue}</b></p>`;\r\n          rez += \"<table>\";\r\n          params.forEach(item => {\r\n            const colorEle = colorSpan(item.color);\r\n            const fmt = method === \"mktVolume\" ? \"0.0a\" : \"0.0%\";\r\n            const pct = numeral(item.data).format(fmt);\r\n            const xx = `<tr><td style=\"text-align:left\">${colorEle} ${item.seriesName}</td><td style=\"text-align:right;padding-left:5px\">${pct}</td></tr>`;\r\n            rez += xx;\r\n          });\r\n          rez += \"</table>\";\r\n          return rez;\r\n        }\r\n      },\r\n      legend: {\r\n        data: legendData\r\n      },\r\n      toolbox: {\r\n        show: true,\r\n        right: \"1%\",\r\n        feature: {\r\n          magicType: {\r\n            show: true,\r\n            type: [\"line\", \"bar\"],\r\n            title: {\r\n              line: \"Line Chart\",\r\n              bar: \"Bar Chart\"\r\n            }\r\n          },\r\n          restore: { show: true, title: \"Restore\" },\r\n          saveAsImage: {\r\n            show: true,\r\n            title: \"Save As Image\",\r\n            type: \"png\",\r\n            name:\r\n              method === \"mktVolume\"\r\n                ? \"daily-volume-by-exchange\"\r\n                : \"market-share-by-exchange\"\r\n          }\r\n        },\r\n        orient: \"vertical\",\r\n        iconStyle: {\r\n          normal: {\r\n            textPosition: \"left\",\r\n            textAlign: \"right\"\r\n          },\r\n          emphasis: {\r\n            textPosition: \"left\",\r\n            textAlign: \"right\"\r\n          }\r\n        },\r\n        top: \"middle\"\r\n      },\r\n      calculable: true,\r\n      xAxis: {\r\n        type: \"category\",\r\n        boundaryGap: true,\r\n        data: xAxisData\r\n      },\r\n      yAxis: {\r\n        type: \"value\",\r\n        max: \"dataMax\",\r\n        axisLabel: {\r\n          formatter: function(value, index) {\r\n            return method === \"mktVolume\"\r\n              ? numeral(value).format(\"0a\")\r\n              : numeral(value).format(\"%\");\r\n          }\r\n        },\r\n        name: method === \"mktVolume\" ? \"Market Volume\" : \"Market Share (%)\",\r\n        nameLocation: \"end\",\r\n        nameGap: 22\r\n      },\r\n      dataZoom: [\r\n        {\r\n          type: \"inside\",\r\n          start: 97,\r\n          end: 100\r\n        },\r\n        {\r\n          show: true,\r\n          type: \"slider\",\r\n          top: \"95%\",\r\n          start: 97,\r\n          end: 100\r\n        }\r\n      ],\r\n      series\r\n    };\r\n  }\r\n}\r\n\r\nexport default MarketShareByYearExch;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport autoBind from \"react-autobind\";\r\nimport { Row, Col, Radio } from \"antd\";\r\nimport MarketShareByYearExch from \"./MarketShareByYearExch\";\r\nimport marketVolumeByYearExch from \"./market-volume-by-exchange.json\";\r\nimport marketShareByYearExch from \"./market-share-by-exchange.json\";\r\n\r\nclass MarketShareByYearExchWithData extends Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    autoBind(this);\r\n    this.exchangeGroups = this.getExchangeGroups();\r\n    this.state = {\r\n      method: \"mktVolume\",\r\n      groupName: \"all\",\r\n      chartData: this.filterData(\"all\"),\r\n      height: 300\r\n    };\r\n  }\r\n\r\n  isInGroup(exch, groupName) {\r\n    if (groupName === \"all\") return true;\r\n    const groupMembers = this.exchangeGroups[groupName].venues;\r\n    return groupMembers.includes(exch);\r\n  }\r\n\r\n  getExchangeGroups() {\r\n    return {\r\n      all: {},\r\n      cboe: {\r\n        venues: [\"CBOE\", \"CBOE BYX\", \"CBOE BZX\", \"CBOE EDGA\", \"CBOE EDGX\"]\r\n      },\r\n      nasdaq: {\r\n        venues: [\"NASDAQ\", \"NASDAQ BX\", \"NASDAQ ISE\", \"NASDAQ PSX\"]\r\n      },\r\n      nyse: {\r\n        venues: [\r\n          \"NYSE\",\r\n          \"NYSE American\",\r\n          \"NYSE Arca\",\r\n          \"NYSE Chicago\",\r\n          \"NYSE National\"\r\n        ]\r\n      },\r\n      inverted: {\r\n        venues: [\"CBOE BYX\", \"CBOE EDGA\", \"NASDAQ BX\", \"NYSE National\"]\r\n      },\r\n      iex: { venues: [\"IEX\"] },\r\n      trf: { venues: [\"TRF\"] }\r\n    };\r\n  }\r\n\r\n  onMethodSelection(e) {\r\n    const method = e.target.value;\r\n    this.setState({\r\n      method,\r\n      chartData: this.filterData(this.state.groupName, method)\r\n    });\r\n  }\r\n\r\n  onGroupSelection(e) {\r\n    const groupName = e.target.value;\r\n    this.setState({\r\n      groupName,\r\n      chartData: this.filterData(groupName, this.state.method)\r\n    });\r\n  }\r\n\r\n  filterData(groupName, method) {\r\n    let plotData = marketVolumeByYearExch;\r\n    if (method === \"mktShare\") {\r\n      plotData = marketShareByYearExch;\r\n    }\r\n\r\n    const chartData = {\r\n      xAxisData: plotData.date,\r\n      legendData: [],\r\n      series: []\r\n    };\r\n\r\n    let processedData = {};\r\n    if (groupName === \"all\") {\r\n      Object.keys(plotData).forEach(key => {\r\n        if (key === \"date\") return;\r\n        const exchData = plotData[key];\r\n        const name = key.split(\" \")[0];\r\n        if (processedData.hasOwnProperty(name)) {\r\n          exchData.forEach(function(v, i) {\r\n            processedData[name][i] += v;\r\n          });\r\n        } else {\r\n          // Make sure to clone the array\r\n          processedData[name] = exchData.slice(0);\r\n        }\r\n      });\r\n    } else {\r\n      processedData = plotData;\r\n    }\r\n\r\n    Object.keys(processedData).forEach(key => {\r\n      if (key === \"date\") return;\r\n      const name = key;\r\n      if (this.isInGroup(name, groupName)) {\r\n        const dataPoints = {\r\n          name,\r\n          type: \"bar\",\r\n          barMaxWidth: 50,\r\n          stack: \"dailyVolume\",\r\n          symbol: \"none\",\r\n          itemStyle: { normal: { areaStyle: { type: \"default\" } } },\r\n          data: processedData[name]\r\n        };\r\n        if (groupName === \"inverted\" && name === \"NYSE National\") {\r\n          plotData.date.forEach(function(date, i) {\r\n            if (date <= 2017) {\r\n              dataPoints.data[i] = 0;\r\n            }\r\n          });\r\n        }\r\n        chartData.legendData.push(name);\r\n        chartData.series.push(dataPoints);\r\n      }\r\n    });\r\n    return chartData;\r\n  }\r\n\r\n  onResize(height) {\r\n    this.setState({ height });\r\n  }\r\n\r\n  render() {\r\n    const { method, groupName, chartData } = this.state;\r\n\r\n    return (\r\n      <Fragment>\r\n        <Row gutter={32}>\r\n          <Col span={24}>\r\n            <div align=\"right\">\r\n              <Radio.Group onChange={this.onMethodSelection} value={method}>\r\n                <Radio value=\"mktVolume\">Market Volume</Radio>\r\n                <Radio value=\"mktShare\">Market Share</Radio>\r\n              </Radio.Group>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={32}>\r\n          <Col span={24}>\r\n            <div align=\"right\">\r\n              <Radio.Group onChange={this.onGroupSelection} value={groupName}>\r\n                <Radio value=\"all\">All</Radio>\r\n                <Radio value=\"cboe\">CBOE</Radio>\r\n                <Radio value=\"nasdaq\">NASDAQ</Radio>\r\n                <Radio value=\"nyse\">NYSE</Radio>\r\n                <Radio value=\"inverted\">Inverted</Radio>\r\n                <Radio value=\"iex\">IEX</Radio>\r\n                <Radio value=\"trf\">Off-Exchange</Radio>\r\n              </Radio.Group>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row gutter={32}>\r\n          <Col span={24}>\r\n            <MarketShareByYearExch\r\n              data={chartData}\r\n              onResize={this.onResize}\r\n              method={method}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MarketShareByYearExchWithData;\r\n","// Import React\r\nimport React from \"react\";\r\n\r\n// Import Spectacle Core tags\r\nimport { Deck, Slide, Text } from \"spectacle\";\r\nimport MarketShareByYearExchWithData from \"./MarketShareByYearExchWithData\";\r\n\r\n// Import theme\r\nimport createTheme from \"spectacle/lib/themes/default\";\r\n\r\n// Require CSS\r\nrequire(\"normalize.css\");\r\n\r\nconst theme = createTheme(\r\n  {\r\n    primary: \"white\",\r\n    secondary: \"black\",\r\n    tertiary: \"blue\",\r\n    quaternary: \"black\"\r\n  },\r\n  {\r\n    primary: \"Montserrat\",\r\n    secondary: \"Helvetica\"\r\n  }\r\n);\r\n\r\nexport default class Presentation extends React.Component {\r\n  render() {\r\n    return (\r\n      <Deck\r\n        transition={[\"fade\"]}\r\n        theme={theme}\r\n        transitionDuration={500}\r\n        contentWidth={\"95%\"}\r\n        contentHeight={\"100%\"}\r\n        progress={\"none\"}\r\n      >\r\n        <Slide transition={[\"fade\"]} bgColor=\"primary\">\r\n          <Text\r\n            textSize=\"1.5em\"\r\n            margin=\"0px 0px 30px 0px\"\r\n            bold\r\n            textColor=\"black\"\r\n          >\r\n            U.S. Equities Daily Volume\r\n          </Text>\r\n          <MarketShareByYearExchWithData />\r\n        </Slide>\r\n      </Deck>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Presentation from \"./presentation\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<Presentation />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}